@model postArticle.viewmodel.ArticleIndexViewModel
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{

    ViewBag.Title = "首頁";
    var articleList = Model.articles.ToList();
    var ClassificationInput = "Classification";
    var OrderInput = "Order";
    var SearchInput = "Search";
    var CollectInput = "Collect";
    var MyArticleInput = "MyArticle";

}


<style>
    #search-container{
        padding-top:20px;
    }
    body {
        background-color: #DBF0D0;
        font-family: Arial, sans-serif;
    }

    h2 {
        text-align: center;
        color: #333;
    }

    #classificationDropdown, #classificationDropdown2 {
        width: 200px;
        padding: 8px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #fff;
        color: #333;
    }

        #classificationDropdown option, #classificationDropdown2 option {
            background-color: #fff;
            font-size: 16px;
        }

        #classificationDropdown,#classificationDropdown2:hover {
            border-color: #007bff;
        }

    .btnn {
        width: 100px;
        height: 36.8px;
        border: none;
        border-radius:5px;
        background-color: #97CD7D;
        color: #333;
    }

    #selectArticle h {
        font-weight: bold;
        margin-bottom: 10px;
    }

    #selectArticle button {
        margin-right: 10px;
        padding: 5px 10px;
        background-color: #fff;
        border: none;
        border-radius: 5px;
        color: black;
        cursor: pointer;
        margin-bottom: 20px;
    }

    .select-container button:hover,
    .select-container button:focus {
        background-color: #2f863a;
    }

    #article-container {
        font-size: 16px;
    }

    #article-item {
        margin-bottom: 20px;
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        transition: transform 0.2s;
    }

    .article-item:hover {
        transform: scale(1.05);
    }

    .article-title {
        font-size: 30px;
        font-weight: bold;
        color: cadetblue;
        margin-bottom: 10px;
    }

    .article-content {
        font-size: 18px;
        margin-bottom: 10px;
    }

    .article-info {
        font-size: 14px;
        color: #888;
        margin-bottom: 10px;
    }

    #article-image {
        width: 500px;
        height: 300px;
        overflow: hidden;
    }

        #article-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    #article-actions {
        font-size: 14px;
    }

    h {
        color: #216f24;
    }

   

    #search-input {
        margin-right: 10px;
    }

        #search-input input[type="text"] {
            width: 100%;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

    #search-button button {
       
        background-color: #97CD7D;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
    }

    .search-button button:hover,
    .search-button button:focus {
        background-color: #2f863a;
    }

    #selectArticle {
        margin-top: 30px;
    }

    #button-container {
        margin-top: 30px;
    }

    .row {
        margin-top: 0px;
    }
</style>


<p style="font-size: 20px; margin-top: 60px; color: #216f24; font-weight: bold; ">使用者:@Model.userName</p>


@using (Html.BeginForm("ArticleIndex", "Home", FormMethod.Post, new { id = "SelectPanel" }))
{

<div>
    
	<div class="row" id="selectArticle" style="margin-top:-10px;">

		<div class="col-md-2">
			<h>分類</h>
			<select id="classificationDropdown" onchange="changeClass(this.value, '@ClassificationInput')">
				<option value="ALL">全部</option>
				<option value="工作">工作</option>
				<option value="健康">健康</option>
				<option value="學業">學業</option>
				<option value="家庭">家庭</option>
				<option value="經濟">經濟</option>
			</select>

			@Html.HiddenFor(model => model.Classification, new { id = "ClassificationInput", value = "" })
		</div>

		<div class="col-md-2">
			<h>排序</h>
			<select id="classificationDropdown2" onchange="changeClass(this.value, '@OrderInput')">

				<option value="Default">默認</option>
				<option value="時間">時間</option>
				<option value="人氣">人氣</option>
			</select>

			@Html.HiddenFor(model => model.Order, new { id = "OrderInput", value = "" })
		</div>
		<div class="col-md-4" style="padding-left:50px; padding-top:20px;">
			@if (Model.isUser)
			{


				<input type="text" name="username" style="position:absolute; width:0; height:0; overflow:hidden; opacity:0;" autocomplete="on">
				<input type="password" name="password" style="position:absolute; width:0; height:0; overflow:hidden; opacity:0;" autocomplete="on">

				if (Model.IsShowCollect)
				{
					@Html.HiddenFor(model => model.ShowCollect, new { id = "CollectInput", value = "" })
					<button onclick="changeClass('false','@CollectInput')" type="button" class="btnn">顯示全部</button>
				}
				else
				{
					@Html.HiddenFor(model => model.ShowCollect, new { id = "CollectInput", value = "" })
					<button onclick="changeClass('true','@CollectInput')" type="button" class="btnn">我的收藏</button>
				}

				if (Model.IsShowMyArticle)
				{
					@Html.HiddenFor(model => model.ShowMyArticle, new { id = "MyArticleInput", value = "" })
					<button onclick="changeClass('false','@MyArticleInput')" type="button" class="btnn">所有文章</button>
				}
				else
				{
					@Html.HiddenFor(model => model.ShowMyArticle, new { id = "MyArticleInput", value = "" })
					<button onclick="changeClass('true','@MyArticleInput')" type="button" class="btnn">我的文章</button>
				}
			}
		</div>
		<div class="col-md-4 d-flex" id="search-container" >
			<div id="search-input" class="flex-grow-1">
				@Html.TextBoxFor(model => model.ShowSearch, new { id = "SearchInput", value = Model.ShowSearch, placeholder = "輸入關鍵字" })

			</div>
			<div id="search-button">
				@Html.HiddenFor(model => model.IsShowSearch, new { id = "SearchInput", value = false })
				<button type="button" onclick="changeClass(true, '@SearchInput')">搜尋</button>
			</div>
		</div>

	</div>
	
</div>

}

<hr>



<div id="article-container">
    @{int index = 0; }

    @foreach (var item in Model.articles)
    {
        if(item.ArticleType == "是")
                {
                    <div class="container">
                        <div class="row justify-content-evenly" id="article-item"  style="background-color:#fff;">
                        <div class="col-xl-6">
                        <div style="color: #888; font-size: 15px; font-weight:bolder;">--專業文章--</div>
                        <div class="article-title">
                        <a href="@Url.Action("ArticleDetails", "ArticleManage", new { id = item.ArticleID })" style="color:black" ;>
                            @Html.DisplayFor(modelItem => item.Title)
                        </a>
                    </div>
                
                    <div class="article-content">

                            @Html.Raw(HttpUtility.HtmlDecode(item.Content))

                    </div>
                
                    <div class="article-info">


                            @Html.DisplayFor(modelItem => item.UserManage.UserName)


                            @Html.DisplayFor(modelItem => item.Time)

                    </div>
             
                            @if (Model.isUser)
                            {
                    
                                <div id="article-actions">
                        
                                    @if (!Model.IsCollect[index])
                        
                                    {
                            
                                        <button class="btn bi-star-fill" onclick="handleCollect('@Url.Action("ArticleCollect", new { id = item.ArticleID })', '@Model.Page', '收藏')">收藏|</button>
                        
                                        }
                        
                                    else
                        
                                    {
                            
                                        <button class="btn bi-star-fill" onclick="handleCollect('@Url.Action("CancelCollect", new { id = item.ArticleID })', '@Model.Page', '取消收藏')">取消收藏|</button>
                        
                                        }

                    
                                </div>
                
                                }
            
                        </div>
            <div class="col-xl-6 " id="article-image">
                <img src="~/Uploads/@Html.DisplayFor(modelItem => item.ImageURL)" alt="Article Image">
                @Html.HiddenFor(modelItem => item.ImageURL)
            </div>
        </div>

    </div>
                }


        else
                {
                    <div class="container">
            <div class="row justify-content-evenly" id="article-item" style="background-color:#fff">
                <div class="col-xl-6">
                    <div style="color: #888; font-size: 15px; font-weight:bolder;">--會員文章--</div>
                    <div class="article-title">
                        <a href="@Url.Action("ArticleDetails", "ArticleManage", new { id = item.ArticleID })" style="color:black" ;>
                            @Html.DisplayFor(modelItem => item.Title)
                        </a>
                    </div>
                    <div class="article-content">

                        @Html.Raw(HttpUtility.HtmlDecode(item.Content))

                    </div>
                    <div class="article-info">


                        @Html.DisplayFor(modelItem => item.UserManage.UserName)


                        @Html.DisplayFor(modelItem => item.Time)


                    </div>
                    @if (Model.isUser)
                    {
                        <div id="article-actions">
                            @if (!Model.IsCollect[index])
                            {
                                <button class="btn bi-star-fill" onclick="handleCollect('@Url.Action("ArticleCollect", new { id = item.ArticleID })', '@Model.Page', '收藏')">收藏|</button>
                            }
                            else
                            {
                                <button class="btn bi-star-fill" onclick="handleCollect('@Url.Action("CancelCollect", new { id = item.ArticleID })', '@Model.Page', '取消收藏')">取消收藏|</button>
                            }

                        </div>
                    }
                </div>
                <div class="col-xl-6 " id="article-image">
                    <img src="~/Uploads/@Html.DisplayFor(modelItem => item.ImageURL)" alt="Article Image">
                    @Html.HiddenFor(modelItem => item.ImageURL)
                </div>
            </div>

        </div>
                }

        index += 1;

    }


</div>

    <div style="text-align:center;">
    
        @Html.PagedListPager(Model.articles, page => Url.Action("ArticleIndex", new { page }))
    
    </div>


    <div class="footer" style=" display:flex; width:100%; margin-top: 30px; ">

        <p style="width:100%; text-align:center;">&copy; @DateTime.Now.Year - 療癒之森</p>

    </div>


<script>
    function handleCollect(url, page, action) {
        var result = confirm("是否" + action + "此文章？");
        if (result) {
            var redirectUrl = url + '?page=' + encodeURIComponent(page);
            makeAjaxRequest(redirectUrl, null);
        }
    }

    function changeClass(value, input) {
        document.getElementById(input + "Input").value = value;
        var url = '@Url.Action("ArticleIndex", "Home")';
        var data = $('#SelectPanel').serialize();
        var selectElement = document.getElementById("classificationDropdown");
        var optionvalue = selectElement.options[selectElement.selectedIndex].value;
        var selectElement2 = document.getElementById("classificationDropdown2");
        var optionvalue2 = selectElement2.options[selectElement2.selectedIndex].value;
        console.log(optionvalue2);

        while (input === "Search") {
       
           
        }


        makeAjaxRequested(url, data, optionvalue, optionvalue2);
    }

    function makeAjaxRequested(redirectUrl, requestData, optionvalue, optionvalue2) {
     
        $.ajax({
            url: redirectUrl,
            type: 'POST',
            data: requestData,
            success: function (result) {
                // 更新部分內容
                $('#PanelReload').html(result);
                $('#classificationDropdown').val(optionvalue);
                $('#classificationDropdown2').val(optionvalue2);
            }
        });
    }
</script>

